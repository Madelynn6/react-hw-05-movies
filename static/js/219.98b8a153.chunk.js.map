{"version":3,"file":"static/js/219.98b8a153.chunk.js","mappings":"8QAEaA,EAAWC,EAAAA,GAAAA,GAAH,iGAORC,EAAOD,EAAAA,GAAAA,EAAH,sHAOJE,EAAOF,EAAAA,GAAAA,EAAH,+C,SCgCjB,EA3Ca,WACX,OAA8BG,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WACRC,GAED,GAAE,IAEH,IAAMA,EAAQ,mCAAG,8GAEYC,EAAAA,EAAAA,IAAeJ,GAF3B,OAEPK,EAFO,OAGbN,EAAWM,GAHE,gDAKbC,QAAQC,IAAR,MALa,yDAAH,qDASd,OAAKT,GAKH,SAACL,EAAD,UACGK,EAAQU,KAAKC,KAAI,SAAAC,GAAE,OAClB,2BACE,gBACEC,IACED,EAAE,aAAF,yCACsCA,EAAE,cACpC,+BAENE,IAAKF,EAAGG,KACRC,MAAM,WAER,SAACnB,EAAD,UAAOe,EAAGG,QACV,SAACjB,EAAD,+BAAqBc,EAAGK,eAXjBL,EAAGV,GADM,OALf,uCAsBV,C,sLC9CKgB,EAAU,mCAEHC,EAAO,mCAAG,sGACFC,MAAM,2DAAD,OACqCF,IAFxC,cACfG,EADe,gBAIIA,EAAKC,OAJT,cAIfC,EAJe,yBAKdA,GALc,2CAAH,qDAQPC,EAAW,mCAAG,WAAMC,GAAN,yFACNL,MAAM,sCAAD,OACgBK,EADhB,oBACkCP,EADlC,oBADC,cACnBG,EADmB,gBAIAA,EAAKC,OAJL,cAInBC,EAJmB,yBAKlBA,GALkB,2CAAH,sDAQXjB,EAAc,mCAAG,WAAMmB,GAAN,yFACTL,MAAM,sCAAD,OACgBK,EADhB,4BAC0CP,EAD1C,oBADI,cACtBG,EADsB,gBAIHA,EAAKC,OAJF,cAItBC,EAJsB,yBAKrBA,GALqB,2CAAH,sDAQdG,EAAc,mCAAG,WAAMD,GAAN,yFACTL,MAAM,sCAAD,OACgBK,EADhB,4BAC0CP,EAD1C,oBADI,cACtBG,EADsB,gBAIHA,EAAKC,OAJF,cAItBC,EAJsB,yBAKrBA,GALqB,2CAAH,sDAQdI,EAAc,mCAAG,WAAMC,GAAN,yFACTR,MAAM,qDAAD,OAC+BF,EAD/B,iCAC+DU,IAF3D,cACtBP,EADsB,gBAIHA,EAAKC,OAJF,cAItBC,EAJsB,yBAKrBA,GALqB,2CAAH,qD,sBClC3B,SAASM,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.js","utils/fetchAPI.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  margin-top: 25px;\n`;\n\nexport const Name = styled.p`\n  font-weight: 500;\n  font-size: 18px;\n  text-transform: uppercase;\n  text-align: center;\n`;\n\nexport const Role = styled.p`\n  text-align: center;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCreditsById } from '../../utils/fetchAPI';\nimport { CastList, Name, Role } from './Cast.styled';\n\nconst Cast = () => {\n  const [credits, setCredits] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    loadData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const loadData = async () => {\n    try {\n      const loadedData = await getCreditsById(id);\n      setCredits(loadedData);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  if (!credits) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <CastList>\n      {credits.cast.map(el => (\n        <li key={el.id}>\n          <img\n            src={\n              el['profile_path']\n                ? `https://image.tmdb.org/t/p/w500${el['profile_path']}`\n                : 'https://placehold.co/250x375'\n            }\n            alt={el.name}\n            width=\"250px\"\n          />\n          <Name>{el.name}</Name>\n          <Role>{`Character: ${el.character}`}</Role>\n        </li>\n      ))}\n    </CastList>\n  );\n};\n\nexport default Cast;\n","const API_KEY = '0f7df762fc4a1a6e1fcef1462349afe2';\n\nexport const getData = async () => {\n  const data = await fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n  const dataJSONed = await data.json();\n  return dataJSONed;\n};\n\nexport const getDataById = async dataId => {\n  const data = await fetch(\n    `https://api.themoviedb.org/3/movie/${dataId}?api_key=${API_KEY}&language=en-US`\n  );\n  const dataJSONed = await data.json();\n  return dataJSONed;\n};\n\nexport const getCreditsById = async dataId => {\n  const data = await fetch(\n    `https://api.themoviedb.org/3/movie/${dataId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  const dataJSONed = await data.json();\n  return dataJSONed;\n};\n\nexport const getReviewsById = async dataId => {\n  const data = await fetch(\n    `https://api.themoviedb.org/3/movie/${dataId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  const dataJSONed = await data.json();\n  return dataJSONed;\n};\n\nexport const getDataByQuery = async dataQuery => {\n  const data = await fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${dataQuery}`\n  );\n  const dataJSONed = await data.json();\n  return dataJSONed;\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["CastList","styled","Name","Role","useState","credits","setCredits","id","useParams","useEffect","loadData","getCreditsById","loadedData","console","log","cast","map","el","src","alt","name","width","character","API_KEY","getData","fetch","data","json","dataJSONed","getDataById","dataId","getReviewsById","getDataByQuery","dataQuery","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}