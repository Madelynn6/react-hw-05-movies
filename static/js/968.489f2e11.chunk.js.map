{"version":3,"file":"static/js/968.489f2e11.chunk.js","mappings":"+QAGaA,EAAQC,EAAAA,GAAAA,GAAH,sDAILC,EAAaD,EAAAA,GAAAA,IAAH,+GAOVE,EAAYF,EAAAA,GAAAA,IAAH,sKAYTG,GAAaH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,wK,SCavB,EAlCa,WACX,OAAoCK,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,mCAAG,qGACUC,EAAAA,EAAAA,MADV,OACTC,EADS,OAEfJ,EAAcI,EAAWC,SAFV,2CAAH,qDAIdH,GACD,GAAE,KAGD,4BACE,SAACV,EAAD,8BACA,yBACE,SAACE,EAAD,UACGK,EAAWO,KAAI,SAAAC,GAAK,OACnB,SAACX,EAAD,CAAYY,GAAE,iBAAYD,EAAME,IAAhC,UACE,UAACd,EAAD,YACE,gBACEe,IAAG,yCAAoCH,EAAMI,aAC7CC,IAAKL,EAAMM,eACXC,MAAM,UAEPP,EAAMQ,MANT,IAMiBR,EAAMS,SAPkBT,EAAME,GAD9B,UAgB9B,C,sLCrCKQ,EAAU,mCAEHd,EAAO,mCAAG,sGACFe,MAAM,2DAAD,OACqCD,IAFxC,cACfE,EADe,gBAIIA,EAAKC,OAJT,cAIfC,EAJe,yBAKdA,GALc,2CAAH,qDAQPC,EAAW,mCAAG,WAAMC,GAAN,yFACNL,MAAM,sCAAD,OACgBK,EADhB,oBACkCN,EADlC,oBADC,cACnBE,EADmB,gBAIAA,EAAKC,OAJL,cAInBC,EAJmB,yBAKlBA,GALkB,2CAAH,sDAQXG,EAAc,mCAAG,WAAMD,GAAN,yFACTL,MAAM,sCAAD,OACgBK,EADhB,4BAC0CN,EAD1C,oBADI,cACtBE,EADsB,gBAIHA,EAAKC,OAJF,cAItBC,EAJsB,yBAKrBA,GALqB,2CAAH,sDAQdI,EAAc,mCAAG,WAAMF,GAAN,yFACTL,MAAM,sCAAD,OACgBK,EADhB,4BAC0CN,EAD1C,oBADI,cACtBE,EADsB,gBAIHA,EAAKC,OAJF,cAItBC,EAJsB,yBAKrBA,GALqB,2CAAH,sDAQdK,EAAc,mCAAG,WAAMC,GAAN,yFACTT,MAAM,qDAAD,OAC+BD,EAD/B,iCAC+DU,IAF3D,cACtBR,EADsB,gBAIHA,EAAKC,OAJF,cAItBC,EAJsB,yBAKrBA,GALqB,2CAAH,qD,sBClC3B,SAASO,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C","sources":["components/Home/Home.styled.js","components/Home/Home.js","utils/fetchAPI.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Title = styled.h1`\n  text-transform: uppercase;\n`;\n\nexport const MoviesList = styled.div`\n  display: flex;\n  justify-content: space-between;\n  gap: 20px;\n  flex-wrap: wrap;\n`;\n\nexport const MovieCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  max-width: 300px;\n\n  &:hover {\n    scale: 1.05;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  display: block;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  font-size: 18px;\n\n  &:hover {\n    color: #19a7ce;\n  }\n`;\n","import { useState, useEffect } from 'react';\n// import { Link } from 'react-router-dom';\nimport { getData } from '../../utils/fetchAPI';\nimport { Title, MoviesList, MovieCard, StyledLink } from './Home.styled';\n\nconst Home = () => {\n  const [moviesList, setMoviesList] = useState([]);\n\n  useEffect(() => {\n    const loadData = async () => {\n      const loadedData = await getData();\n      setMoviesList(loadedData.results);\n    };\n    loadData();\n  }, []);\n\n  return (\n    <div>\n      <Title>Trending today</Title>\n      <ul>\n        <MoviesList>\n          {moviesList.map(movie => (\n            <StyledLink to={`movies/${movie.id}`} key={movie.id}>\n              <MovieCard>\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                  alt={movie.original_title}\n                  width=\"300px\"\n                />\n                {movie.title} {movie.name}\n              </MovieCard>\n            </StyledLink>\n          ))}\n        </MoviesList>\n      </ul>\n    </div>\n  );\n};\n\nexport default Home;\n","const API_KEY = '0f7df762fc4a1a6e1fcef1462349afe2';\n\nexport const getData = async () => {\n  const data = await fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n  const dataJSONed = await data.json();\n  return dataJSONed;\n};\n\nexport const getDataById = async dataId => {\n  const data = await fetch(\n    `https://api.themoviedb.org/3/movie/${dataId}?api_key=${API_KEY}&language=en-US`\n  );\n  const dataJSONed = await data.json();\n  return dataJSONed;\n};\n\nexport const getCreditsById = async dataId => {\n  const data = await fetch(\n    `https://api.themoviedb.org/3/movie/${dataId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  const dataJSONed = await data.json();\n  return dataJSONed;\n};\n\nexport const getReviewsById = async dataId => {\n  const data = await fetch(\n    `https://api.themoviedb.org/3/movie/${dataId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  const dataJSONed = await data.json();\n  return dataJSONed;\n};\n\nexport const getDataByQuery = async dataQuery => {\n  const data = await fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${dataQuery}`\n  );\n  const dataJSONed = await data.json();\n  return dataJSONed;\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["Title","styled","MoviesList","MovieCard","StyledLink","Link","useState","moviesList","setMoviesList","useEffect","loadData","getData","loadedData","results","map","movie","to","id","src","poster_path","alt","original_title","width","title","name","API_KEY","fetch","data","json","dataJSONed","getDataById","dataId","getCreditsById","getReviewsById","getDataByQuery","dataQuery","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}